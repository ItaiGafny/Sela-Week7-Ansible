---
- hosts: all
  tasks:

  - name: Delete app directory
    file:
      state: absent
      path: ~/weight-tracker  
          
  - name: Create app directory
    file:
      path:  ~/weight-tracker/
      state: directory
      mode: '0755'

  - name: copy .env file
    copy:
      src: .env
      dest:  ~/weight-tracker/.env
    
- hosts: all
  become: true
  vars:
    default_container_name: weighttracker
    default_container_image: weighttracker.azurecr.io/weighttracker:{{ build_id }}

  tasks:
    - name: Install aptitude
      apt:
        name: aptitude
        state: latest
        update_cache: true

    - name: Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: latest
        update_cache: true

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: true

    - name: Install Docker Module for Python
      pip:
        name: docker

    #Set docker to run without sudo
    - name: Ensure docker exists
      group:
        name: docker
        state: present

    - name: Add current user to docker group
      become: true
      ansible.builtin.user:
        name: azureuser
        groups: docker
        append: yes

    - name: reset connection so sudo changes will apply
      meta: reset_connection  
                
    - name: Docker login to ACR
      shell: |
        docker login weighttracker.azurecr.io -u {{ Service_principal_ID }} -p {{ Service_principal_password }}

    - name: Pull the weight tracker image
      docker_image:
        name: "{{ default_container_image }}"
        source: pull

    #remove previous containers that might have the ports bindings 
    - name: Kill any old container
      shell: |
        #c=$(docker ps -q) && [[ $c ]] && docker kill $c
        containers=$(docker ps -q)
        if [ ! -z $containers ]; then
          docker kill $containers;
        fi
    
    - name: Start the container
      shell: |
        docker run -p8080:8080 -d --restart unless-stopped -v /home/azureuser/weight-tracker/.env:/home/app/.env {{ default_container_image }}

- hosts: "{{ init_host_ip }}"
  tasks:

  - name: init db (only one machine)
        when: "{{ init_db }}" == "yes"
    tags: initdb
    shell: |
      containers=$(docker ps -q)
      docker exec -d $containers npm run initdb
